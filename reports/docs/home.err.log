Traceback (most recent call last):
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/eelkjetalsma/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# @title absoluut loonverschil per afdeling
import pandas as pd
import plotly.express as px

pastel_colors = ['#AEC6CF', '#FFD1DC', '#BFD8B8', '#FFFACD']
color_map = {dept: pastel_colors[i % len(pastel_colors)] for i, dept in enumerate(departments)}

df = pd.read_csv("Glassdoor Gender Pay Gap.csv")


df["TotalPay"] = df["BasePay"] + df["Bonus"]
df["gender"] = df["Gender"].map({"Male": "Man", "Female": "Vrouw"})


bins = range(df["Age"].min(), df["Age"].max() + 5, 5)
labels = [f"{b}-{b+4}" for b in bins[:-1]]
df["age_group"] = pd.cut(df["Age"], bins=bins, labels=labels, right=False)


df = df.dropna(subset=["Dept", "age_group", "gender", "TotalPay"])


grouped = df.groupby(["Dept", "age_group", "gender"], observed=True)["TotalPay"].mean().reset_index()


pivot = grouped.pivot(index=["Dept", "age_group"], columns="gender", values="TotalPay").reset_index()
pivot["verschil"] = abs(pivot["Vrouw"] - pivot["Man"])


departments = pivot["Dept"].unique()


initial_dept = departments[0]
filtered = pivot[pivot["Dept"] == initial_dept]

fig = px.bar(
    filtered,
    x="age_group",
    y="verschil",
    labels={
        "age_group": "Leeftijdsgroep",
        "verschil": "Uurloon verschil (absoluut)",
    },
    hover_data={"Vrouw": ':.2f', "Man": ':.2f', "verschil": ':.2f'},
    title=f"Uurloon verschil per leeftijdsgroep â€“ {initial_dept}",
    color_discrete_sequence=["lightblue"]
)

dropdown_buttons = []


for dept in departments:
    dept_data = pivot[pivot["Dept"] == dept]
    dropdown_buttons.append(
        dict(
            label=dept,
            method="update",
            args=[
                {
                    "x": [dept_data["age_group"]],
                    "y": [dept_data["verschil"]],
                    "marker.color": color_map[dept],
                    "customdata": dept_data[["Vrouw", "Man", "verschil"]].round(2).values,
                    "hovertemplate": (
                        "Leeftijdsgroep: %{x}<br>"
                        "Vrouw: $%{customdata[0]}<br>"
                        "Man: $%{customdata[1]}<br>"
                        "Verschil: $%{customdata[2]}<extra></extra>"
                    ),
                },
                {"title": f"Uurloon verschil per leeftijdsgroep â€“ {dept}"}
            ]
        )
    )


fig.update_layout(
    updatemenus=[
        dict(
            buttons=dropdown_buttons,
            direction="down",
            showactive=True,
            x=1,
            xanchor="right",
            y=1.15,
            yanchor="top"
        )
    ],
    template="plotly_white",
    yaxis=dict(range=[0, pivot["verschil"].max() * 1.1])
)

fig.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[3], line 6[0m
[1;32m      3[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mexpress[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mpx[39;00m
[1;32m      5[0m pastel_colors [38;5;241m=[39m [[38;5;124m'[39m[38;5;124m#AEC6CF[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m#FFD1DC[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m#BFD8B8[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m#FFFACD[39m[38;5;124m'[39m]
[0;32m----> 6[0m color_map [38;5;241m=[39m {dept: pastel_colors[i [38;5;241m%[39m [38;5;28mlen[39m(pastel_colors)] [38;5;28;01mfor[39;00m i, dept [38;5;129;01min[39;00m [38;5;28menumerate[39m([43mdepartments[49m)}
[1;32m      8[0m df [38;5;241m=[39m pd[38;5;241m.[39mread_csv([38;5;124m"[39m[38;5;124mGlassdoor Gender Pay Gap.csv[39m[38;5;124m"[39m)
[1;32m     11[0m df[[38;5;124m"[39m[38;5;124mTotalPay[39m[38;5;124m"[39m] [38;5;241m=[39m df[[38;5;124m"[39m[38;5;124mBasePay[39m[38;5;124m"[39m] [38;5;241m+[39m df[[38;5;124m"[39m[38;5;124mBonus[39m[38;5;124m"[39m]

[0;31mNameError[0m: name 'departments' is not defined

